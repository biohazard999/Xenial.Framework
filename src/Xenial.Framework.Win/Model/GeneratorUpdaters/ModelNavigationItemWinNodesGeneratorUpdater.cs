using DevExpress.ExpressApp.Model.Core;
using DevExpress.ExpressApp.Win.SystemModule;

using Xenial.Framework.Model.GeneratorUpdaters;

namespace Xenial.Framework.Win.Model.GeneratorUpdaters
{
    /// <summary>
    /// Class ModelNavigationItemWinNodesGeneratorUpdater. Implements the
    /// <see cref="Xenial.Framework.Model.GeneratorUpdaters.ModelNavigationItemNodesGeneratorUpdater" />
    /// </summary>
    ///
    /// <seealso cref="ModelNavigationItemNodesGeneratorUpdater"/>
    /// <seealso cref="Xenial.Framework.Model.GeneratorUpdaters.ModelNavigationItemNodesGeneratorUpdater"/>

    [XenialCheckLicence]
    public sealed partial class ModelNavigationItemWinNodesGeneratorUpdater : ModelNavigationItemNodesGeneratorUpdater
    {
        private new NavigationWinOptions Options => (NavigationWinOptions)base.Options;

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelOptionsWinNodesGeneratorUpdater"/> class.
        /// </summary>
        ///
        /// <param name="options">  The options. </param>

        public ModelNavigationItemWinNodesGeneratorUpdater(NavigationWinOptions options) : base(options) { }

        /// <summary>
        /// Updates the Application Model node content generated by the Nodes Generator, specified by the
        /// <see cref="T:DevExpress.ExpressApp.Model.ModelNodesGeneratorUpdater`1" /> class' type
        /// parameter.
        /// </summary>
        ///
        /// <param name="node"> A ModelNode Application Model node to be updated. </param>

        public override void UpdateNode(ModelNode node)
        {
            base.UpdateNode(node);

            if (node is IModelRootGroupsStyle modelRootGroupsStyle)
            {
                if (Options.NavigationCaption is not null)
                {
                    modelRootGroupsStyle.NavigationCaption = Options.NavigationCaption;
                }
            }
        }
    }
}
