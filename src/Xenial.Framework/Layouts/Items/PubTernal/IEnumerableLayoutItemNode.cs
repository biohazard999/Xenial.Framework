using System.Collections.Generic;

using DevExpress.ExpressApp.Editors;

using Xenial.Framework.Layouts.Items.Base;

#pragma warning disable CA1710 //Rename Type to end in Collection -> By Design
#pragma warning disable CA2227 //Collection fields should not have a setter: By Design

namespace Xenial.Framework.Layouts.Items.PubTernal
{
    /// <summary>   Interface IEnumerableLayoutItemNode. </summary>
    public interface IEnumerableLayoutItemNode
    {
        /// <summary>   Adds the specified item. </summary>
        ///
        /// <param name="item"> The item. </param>

        void Add(LayoutItemNode item);

        /// <summary>   Removes the specified item. </summary>
        ///
        /// <param name="item"> The item. </param>
        ///
        /// <returns>   <c>true</c> if XXXX, <c>false</c> otherwise. </returns>

        bool Remove(LayoutItemNode item);
    }

    /// <summary>
    /// Interface IEnumerableLayoutItemNode Implements the <see cref="ICollection{T}" />
    /// Implements the <see cref="IEnumerable{T}" />
    /// </summary>
    ///
    /// <typeparam name="T">    . </typeparam>
    ///
    /// <seealso cref="ICollection{T}"/>
    /// <seealso cref="IEnumerable{T}">     <autogeneratedoc /></seealso>

    public interface IEnumerableLayoutItemNode<T> : ICollection<T>, IEnumerable<T>
        where T : LayoutItemNode
    {
        /// <summary>   Gets or sets the children. </summary>
        ///
        /// <value> The children. </value>

        LayoutItemCollection<T> Children { get; set; }
    }
}
