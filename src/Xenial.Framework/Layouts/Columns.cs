using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq.Expressions;

using Xenial.Framework.Layouts.ColumnItems;

#pragma warning disable CA1033 //Seal Type -> By Design
#pragma warning disable CA1710 //Rename Type to end in Collection -> By Design
#pragma warning disable CA2227 //Collection fields should not have a setter -> By Design

namespace Xenial.Framework.Layouts
{
    /// <summary>
    /// Class Columns.
    /// </summary>
    /// <autogeneratedoc />
    public class Columns : IEnumerable<Column>
    {
        IEnumerator<Column> IEnumerable<Column>.GetEnumerator() => Items.GetEnumerator();
        IEnumerator IEnumerable.GetEnumerator() => Items.GetEnumerator();

        /// <summary>
        /// Gets or sets the columns.
        /// </summary>
        /// <value>The columns.</value>
        /// <autogeneratedoc />
        public ColumnCollection<Column> Items { get; set; } = new();

        /// <summary>
        /// Adds the specified column.
        /// </summary>
        /// <param name="column">The column.</param>
        /// <autogeneratedoc />
        public void Add(Column column)
            => Items.Add(column);

    }

    /// <summary>
    /// Class ColumnsBuilder.
    /// Implements the <see cref="Xenial.Framework.Layouts.ColumnsBuilder" />
    /// </summary>
    /// <typeparam name="TModelClass">The type of the t model class.</typeparam>
    /// <seealso cref="Xenial.Framework.Layouts.ColumnsBuilder" />
    /// <autogeneratedoc />
    [XenialCheckLicence]
    public partial class ColumnsBuilder<TModelClass> : ColumnsBuilder
        where TModelClass : class
    {
        /// <summary>
        /// Columns the specified expression.
        /// </summary>
        /// <typeparam name="TProperty">The type of the t property.</typeparam>
        /// <param name="expression">The expression.</param>
        /// <returns>Column&lt;TModelClass&gt;.</returns>
        /// <autogeneratedoc />
        public Column<TModelClass> Column<TProperty>(Expression<Func<TModelClass, TProperty>> expression)
            => Xenial.Framework.Layouts.ColumnItems.Column<TModelClass>.Create(expression);
    }

    /// <summary>
    /// Class ColumnsBuilder.
    /// Implements the <see cref="Xenial.Framework.Layouts.ColumnsBuilder" />
    /// </summary>
    /// <seealso cref="Xenial.Framework.Layouts.ColumnsBuilder" />
    /// <autogeneratedoc />
    [XenialCheckLicence]
    public partial class ColumnsBuilder
    {
        /// <summary>
        /// Columns the specified property name.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <returns>Column.</returns>
        /// <autogeneratedoc />
        public Column Column(string propertyName)
           => new Xenial.Framework.Layouts.ColumnItems.Column(propertyName);
    }
}
