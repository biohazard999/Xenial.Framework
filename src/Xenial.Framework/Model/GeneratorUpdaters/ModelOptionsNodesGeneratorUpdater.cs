using System;

using DevExpress.ExpressApp.Model;
using DevExpress.ExpressApp.Model.Core;
using DevExpress.ExpressApp.Model.NodeGenerators;

namespace Xenial.Framework.Model.GeneratorUpdaters
{
    /// <summary>
    /// Class ModelOptionsNodesGeneratorUpdater. Implements the
    /// <see cref="ModelNodesGeneratorUpdater{ModelOptionsNodesGenerator}"/>
    /// </summary>
    ///
    /// <seealso cref="ModelNodesGeneratorUpdater{ModelOptionsNodesGenerator}"/>

    [XenialCheckLicence]
    public partial class ModelOptionsNodesGeneratorUpdater : ModelNodesGeneratorUpdater<ModelOptionsNodesGenerator>
    {
        /// <summary>   Gets the options. </summary>
        ///
        /// <value> The options. </value>

        protected virtual ApplicationOptions Options { get; }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelOptionsNodesGeneratorUpdater"/> class.
        /// </summary>
        ///
        /// <param name="options">  The options. </param>

        public ModelOptionsNodesGeneratorUpdater(ApplicationOptions options)
            => Options = options ?? throw new ArgumentNullException(nameof(options));

        /// <summary>
        /// Updates the Application Model node content generated by the Nodes Generator.
        /// </summary>
        ///
        /// <param name="node"> A ModelNode Application Model node to be updated. </param>

        public override void UpdateNode(ModelNode node)
        {
            if (node is IModelOptions options)
            {
                options.LookupSmallCollectionItemCount = Options.LookupSmallCollectionItemCount ??
                    options.LookupSmallCollectionItemCount;

                options.DataAccessMode = Options.DataAccessMode ??
                    options.DataAccessMode;

                options.LayoutManagerOptions.CaptionColon = Options.Layout.CaptionColon ??
                    options.LayoutManagerOptions.CaptionColon;

                options.LayoutManagerOptions.EnableCaptionColon = Options.Layout.EnableCaptionColon ??
                    options.LayoutManagerOptions.EnableCaptionColon;

                options.LayoutManagerOptions.CaptionLocation = Options.Layout.CaptionLocation ??
                    options.LayoutManagerOptions.CaptionLocation;

                options.LayoutManagerOptions.CaptionHorizontalAlignment = Options.Layout.CaptionHorizontalAlignment ??
                    options.LayoutManagerOptions.CaptionHorizontalAlignment;

                options.LayoutManagerOptions.CaptionVerticalAlignment = Options.Layout.CaptionVerticalAlignment ??
                    options.LayoutManagerOptions.CaptionVerticalAlignment;

                options.LayoutManagerOptions.CaptionWordWrap = Options.Layout.CaptionWordWrap ??
                    options.LayoutManagerOptions.CaptionWordWrap;

                options.LayoutManagerOptions.EnableLayoutGroupImages = Options.Layout.EnableLayoutGroupImages ??
                    options.LayoutManagerOptions.EnableLayoutGroupImages;
            }
        }
    }
}
