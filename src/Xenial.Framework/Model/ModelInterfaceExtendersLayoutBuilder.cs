using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using DevExpress.ExpressApp.Model;

using Xenial.Framework.Model;

namespace Xenial.Framework.Model
{
}

namespace DevExpress.ExpressApp.Model
{
    /// <summary>
    /// Class ModelInterfaceExtendersLayoutBuilderExtensions.
    /// </summary>
    /// <autogeneratedoc />
    public static class ModelInterfaceExtendersLayoutBuilderExtensions
    {
        /// <summary>
        /// Uses the detail view layout builders.
        /// </summary>
        /// <param name="extenders">The extenders.</param>
        /// <returns>ModelInterfaceExtenders.</returns>
        /// <exception cref="ArgumentNullException">extenders</exception>
        /// <autogeneratedoc />
        public static ModelInterfaceExtenders UseDetailViewLayoutBuilders(this ModelInterfaceExtenders extenders)
        {
            _ = extenders ?? throw new ArgumentNullException(nameof(extenders));

            extenders.Add<IModelObjectView, IModelObjectGeneratedView>();

            return extenders;
        }

        /// <summary>
        /// Uses the detail view layout builders regular types.
        /// </summary>
        /// <param name="types">The types.</param>
        /// <returns>IEnumerable&lt;Type&gt;.</returns>
        /// <autogeneratedoc />
        public static IEnumerable<Type> UseDetailViewLayoutBuildersRegularTypes(this IEnumerable<Type> types)
            => types.Concat(new[]
            {
                typeof(IModelObjectGeneratedView),
                typeof(ModelObjectGeneratedViewDomainLogic)
            }
        );
    }
}
