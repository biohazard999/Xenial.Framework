using System;
using System.Diagnostics.CodeAnalysis;

namespace Xenial.Framework.Base
{
    /// <summary>
    /// Class SingletonAttribute.
    /// Implements the <see cref="System.Attribute" />
    /// </summary>
    /// <seealso cref="System.Attribute" />
    /// <autogeneratedoc />
    [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
    public sealed class SingletonAttribute : Attribute
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SingletonAttribute"/> class.
        /// </summary>
        /// <autogeneratedoc />
        public SingletonAttribute() { }

        /// <summary>
        /// Initializes a new instance of the <see cref="SingletonAttribute"/> class.
        /// </summary>
        /// <param name="autoCommit">if set to <c>true</c> [automatic commit].</param>
        /// <autogeneratedoc />
        public SingletonAttribute(bool autoCommit)
            => AutoCommit = autoCommit;

        /// <summary>
        /// Gets or sets a value indicating whether [automatic commit].
        /// </summary>
        /// <value><c>true</c> if [automatic commit]; otherwise, <c>false</c>.</value>
        /// <autogeneratedoc />
#pragma warning disable CA1019 // Define accessors for attribute arguments: For better readablity
        public bool AutoCommit { get; set; }
#pragma warning restore CA1019 // Define accessors for attribute arguments
    }
}
