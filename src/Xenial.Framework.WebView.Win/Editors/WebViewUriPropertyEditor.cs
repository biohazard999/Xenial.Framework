using System;

using DevExpress.ExpressApp.Model;
using DevExpress.ExpressApp.Win;
using DevExpress.ExpressApp.Win.Editors;
using DevExpress.Persistent.Base;

using Xenial.Framework.WebView.Win.Editors;

namespace Xenial.Framework.WebView.Win.Editors
{
    /// <summary>
    /// Class WebViewUriPropertyEditor.
    /// Implements the <see cref="DevExpress.ExpressApp.Win.Editors.WinPropertyEditor" />
    /// </summary>
    /// <seealso cref="DevExpress.ExpressApp.Win.Editors.WinPropertyEditor" />
    /// <autogeneratedoc />
    public class WebViewUriPropertyEditor : WinPropertyEditor
    {
        /// <summary>
        /// Indicates whether the caption of the current Property Editor should be visible in a UI.
        /// </summary>
        /// <value>true if the current Property's caption is visible; otherwise, false.</value>
        /// <autogeneratedoc />
        public override bool IsCaptionVisible => false;

        /// <summary>
        /// Initializes a new instance of the <see cref="WebViewUriPropertyEditor"/> class.
        /// </summary>
        /// <param name="objectType">Type of the object.</param>
        /// <param name="model">The model.</param>
        /// <autogeneratedoc />
        public WebViewUriPropertyEditor(Type objectType, IModelMemberViewItem model) : base(objectType, model)
        {
            ControlBindingProperty = nameof(Control.Source);
            ControlCreated -= WebViewUriPropertyEditor_ControlCreated;
            ControlCreated += WebViewUriPropertyEditor_ControlCreated;
        }

        private async void WebViewUriPropertyEditor_ControlCreated(object sender, EventArgs e)
        {
            try
            {
                await Control.EnsureCoreWebView2Async();
            }
            catch (Exception ex)
            {
                Tracing.LogError(new Guid("0985D675-A93B-48B7-AC88-E3622DD86DAC"), ex);
                WinApplication.Messaging.ShowException(ex.ToString());
            }
        }

        /// <summary>
        /// Releases unmanaged and - optionally - managed resources.
        /// </summary>
        /// <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        /// <autogeneratedoc />
        protected override void Dispose(bool disposing)
        {
            ControlCreated -= WebViewUriPropertyEditor_ControlCreated;
            if (Control is not null && !Control.IsDisposed && !Control.Disposing)
            {
                //Fixes https://github.com/MicrosoftEdge/WebView2Feedback/issues/228
                //Hide before dispose or WebView throws NRE
                Control.Visible = false;
                Control.Parent = null;
                Control.Dispose();
            }
            base.Dispose(disposing);
        }

        /// <summary>
        /// Creates the control core.
        /// </summary>
        /// <returns>System.Object.</returns>
        /// <autogeneratedoc />
        protected override object CreateControlCore() => new Microsoft.Web.WebView2.WinForms.WebView2();

        /// <summary>
        /// Provides access to the control that represents the current Property Editor in a UI.
        /// </summary>
        /// <value>A <see cref="T:System.Windows.Forms.Control" /> object used to display the current Property Editor in a UI.</value>
        /// <autogeneratedoc />
        public new Microsoft.Web.WebView2.WinForms.WebView2 Control => (Microsoft.Web.WebView2.WinForms.WebView2)base.Control;
    }
}

namespace DevExpress.ExpressApp.Editors
{
    /// <summary>
    /// Class WebViewUriPropertyEditorExtensions.
    /// </summary>
    /// <autogeneratedoc />
    public static class WebViewUriPropertyEditorExtensions
    {
        /// <summary>
        /// Uses the web view URI property editor.
        /// </summary>
        /// <param name="editorDescriptorsFactory">The editor descriptors factory.</param>
        /// <returns>EditorDescriptorsFactory.</returns>
        /// <exception cref="ArgumentNullException">editorDescriptorsFactory</exception>
        /// <autogeneratedoc />
        public static EditorDescriptorsFactory UseWebViewUriPropertyEditor(this EditorDescriptorsFactory editorDescriptorsFactory)
        {
            _ = editorDescriptorsFactory ?? throw new ArgumentNullException(nameof(editorDescriptorsFactory));
            editorDescriptorsFactory.RegisterPropertyEditorAlias(Xenial.Framework.WebView.EditorAliases.WebViewUriEditor, typeof(Uri), true);
            editorDescriptorsFactory.RegisterPropertyEditor(typeof(Uri), typeof(WebViewUriPropertyEditor), false);
            return editorDescriptorsFactory;
        }
    }
}
