using System;
using System.Collections.Generic;
using System.Text;

namespace Xenial.FeatureCenter.Module.BusinessObjects.Editors
{
    public partial class StepProgressBarEnumEditorDemo
    {
        protected override string DemoCodeFileName => "demos/FeatureCenter/Xenial.FeatureCenter.Module/BusinessObjects/Editors/StepProgressBarEnumEditorDemo.cs";

        protected override string UsageHtml => new Section()
        {
            Content = new()
            {
                new TabGroup()
                {
                    Tabs = new()
                    {
                        new Tab("Attributes", "fas fa-code")
                        {
                            HtmlAble = MarkDownBlock.FromResourceString("BusinessObjects/Editors/StepProgressBarEnumEditorDemo.Usage.Attributes.md")
                        },
                        new Tab("ModelBuilders", "fas fa-project-diagram")
                        {
                            HtmlAble = MarkDownBlock.FromResourceString("BusinessObjects/Editors/StepProgressBarEnumEditorDemo.Usage.ModelBuilders.md")
                        },
                        new Tab("Model-Editor", "fas fa-tools")
                        {
                            HtmlAble = ImageBlock.Create("is-4by3", Resources.StepProgressBarEnumEditorDemo_Usage_ModelEditor)
                        },
                    }
                }
            }
        }.ToString();

        protected override IEnumerable<RequiredNuget> GetRequiredModules() => new[]
        {
            new RequiredNuget("StepProgressEditors"),
            new RequiredNuget("StepProgressEditors", AvailablePlatform.Win),
        };

        /// <summary>
        /// Adds the installation section.
        /// </summary>
        /// <param name="sb">The sb.</param>
        /// <autogeneratedoc />
        protected override void AddInstallationSection(StringBuilder sb)
        {
            base.AddInstallationSection(sb);

            var tabGroup = Section.Create(string.Empty, new TabGroup
            {
                Tabs = new()
                {
                    new("Using Modules", "fas fa-code")
                    {
                        HtmlAble = new Section()
                        {
                            Content = new()
                            {
                                Section.Create("Common Module", CodeBlock.Create("cs", @"public class MyProjectModule : ModuleBase
{
    protected override ModuleTypeList GetRequiredModuleTypesCore()
    {
        var moduleTypes = base.GetRequiredModuleTypesCore();
        
        moduleTypes.Add(typeof(XenialStepProgressEditorsModule));
        
        return moduleTypes;
    }
}")),
                                Section.Create("Windows Forms Module", CodeBlock.Create("cs", @"public class MyProjectWindowsFormsModule : ModuleBase
{
    protected override ModuleTypeList GetRequiredModuleTypesCore()
    {
        var moduleTypes = base.GetRequiredModuleTypesCore();
        
        moduleTypes.Add(typeof(XenialStepProgressEditorsWindowsFormsModule));
        
        return moduleTypes;
    }
}"))
                            }
                        }
                    },
                    new("Using Feature Slices", "fas fa-pizza-slice")
                    {
                        HtmlAble = new Section()
                        {
                            Content = new()
                            {
                                Section.Create("Common Module", CodeBlock.Create("cs", @"public class MyProjectModule : ModuleBase
{
    protected override void RegisterEditorDescriptors(EditorDescriptorsFactory editorDescriptorsFactory)
    {
        base.RegisterEditorDescriptors(editorDescriptorsFactory);
        editorDescriptorsFactory.UseStepProgressEnumPropertyEditors();
    }
}")),
                                Section.Create("Windows Forms Module", CodeBlock.Create("cs", @"public class MyProjectWindowsFormsModule : ModuleBase
{
    protected override void RegisterEditorDescriptors(EditorDescriptorsFactory editorDescriptorsFactory)
    {
        base.RegisterEditorDescriptors(editorDescriptorsFactory);
        editorDescriptorsFactory.UseStepProgressEnumPropertyEditorsWin();
    }
    
    public override void AddGeneratorUpdaters(ModelNodesGeneratorUpdaters updaters)
    {
        base.AddGeneratorUpdaters(updaters);
        
        //This is optional. You need this only for nullable enumeration properties in combination with the EditorAliasAttribute, StepProgressEnumEditorAttribute or ModelBuilders when using DevExpress version <= 20.2.4
        //See: https://supportcenter.devexpress.com/ticket/details/t962834/registering-an-editor-alias-for-nullable-types for more information
        updaters.UseStepProgressEnumPropertyEditors();
    }
}"))
                            }
                        }
                    }
                }
            });

            sb.AppendLine(tabGroup.ToString());

        }
    }
}
