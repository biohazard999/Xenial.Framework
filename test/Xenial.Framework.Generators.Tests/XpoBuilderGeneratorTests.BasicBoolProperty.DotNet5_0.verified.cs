//HintName: BasicBoolProperty.BasicBoolProperty.Builder.g.cs
// <auto-generated />

using System;
using System.Runtime.CompilerServices;

namespace MyProject
{
    [CompilerGenerated]
    internal partial class BasicBoolPropertyBuilder : BasicBoolPropertyBuilder<MyProject.BasicBoolProperty, BasicBoolPropertyBuilder> { }
    
    [CompilerGenerated]
    internal abstract partial class BasicBoolPropertyBuilder<TClass, TBuilder>
        where TClass : MyProject.BasicBoolProperty
        where TBuilder : BasicBoolPropertyBuilder<TClass, TBuilder>
    {
        protected TBuilder This
        {
            get
            {
                return (TBuilder)this;
            }
        }
        
        protected virtual TClass CreateTarget()
        {
            return (TClass)new MyProject.BasicBoolProperty();
        }
        
        protected bool BoolProperty { get; set; }
        protected bool WasBoolPropertyCalled { get; private set; }
        
        public TBuilder WithBoolProperty(bool boolProperty)
        {
            this.BoolProperty = boolProperty;
            this.WasBoolPropertyCalled = true;
            return This;
        }
        
        protected bool BoolProperty2 { get; set; }
        protected bool WasBoolProperty2Called { get; private set; }
        
        public TBuilder WithBoolProperty2(bool boolProperty2)
        {
            this.BoolProperty2 = boolProperty2;
            this.WasBoolProperty2Called = true;
            return This;
        }
        
        public virtual TClass Build()
        {
            TClass target = this.CreateTarget();
            
            if(this.WasBoolPropertyCalled)
            {
                target.BoolProperty = this.BoolProperty;
            }
            
            if(this.WasBoolProperty2Called)
            {
                target.BoolProperty2 = this.BoolProperty2;
            }
            
            return target;
        }
    }
}
