name: Xenial.Framework

on:
  schedule:
    - cron: "30 0 * * *"
  push:
    branches: [ main ]
    tags: [v*]
    paths-ignore: [docs/**]
#  pull_request:
#    branches: [ main ]
#    paths-ignore: [docs/**]
  pull_request_target:
    branches: [ main ]
    paths-ignore: [docs/**]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - name: Output
      run: echo ${{ github.event.pull_request_target }}
    - name: Get the version
      id: get_version
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      shell: bash

    - name: Echo TagName
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo ${{ steps.get_version.outputs.VERSION }}
      
    - name: Use PullRequest Git Base
      if: github.event.pull_request_target != false
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        
    - uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: |
        git fetch --prune --unshallow

    - name: Setup .NETCORE3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Setup .NET5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Setup .NET6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build
      run: dotnet run --project build/build.csproj pack
      env:
          DEVEXPRESS_NUGET_FEED: ${{secrets.DEVEXPRESS_NUGET_FEED}}
          GITHUB_EVENT_NAME: ${{github.event_name}}

    - uses: actions/upload-artifact@v2.2.4
      if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/v')
      with:
        name: nuget
        path: artifacts/nuget/*

    - uses: actions/upload-artifact@v2.2.4
      if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/v')
      with:
        name: nuget
        path: artifacts/bin/*

    - name: publish:publish:framework.featurecenter.xenial.io
      if: runner.os == 'Windows'
      run: dotnet run --project build/build.csproj publish:framework.featurecenter.xenial.io
      env:
          DEVEXPRESS_NUGET_FEED: ${{secrets.DEVEXPRESS_NUGET_FEED}}
          XENIAL_FEATURECENTER_DEFAULTCONNECTIONSTRING: ${{secrets.XENIAL_FEATURECENTER_DEFAULTCONNECTIONSTRING}}
          GITHUB_EVENT_NAME: ${{github.event_name}}

    - name: publish:publish:Xenial.FeatureCenter.Win
      if: runner.os == 'Windows'
      run: dotnet run --project build/build.csproj publish:Xenial.FeatureCenter.Win -s
      env:
          DEVEXPRESS_NUGET_FEED: ${{secrets.DEVEXPRESS_NUGET_FEED}}
          XENIAL_FEATURECENTER_DEFAULTCONNECTIONSTRING: ${{secrets.XENIAL_FEATURECENTER_DEFAULTCONNECTIONSTRING}}
          GITHUB_EVENT_NAME: ${{github.event_name}}

    - name: deploy:publish:framework.featurecenter.xenial.io
      if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/v')
      run: dotnet run --project build/build.csproj deploy:framework.featurecenter.xenial.io -s
      env:
          DEVEXPRESS_NUGET_FEED: ${{secrets.DEVEXPRESS_NUGET_FEED}}
          WEBDEPLOY_IP: ${{secrets.WEBDEPLOY_IP}}
          WEBDEPLOY_USER: ${{secrets.WEBDEPLOY_USER}}
          WEBDEPLOY_PASS: ${{secrets.WEBDEPLOY_PASS}}
          GITHUB_EVENT_NAME: ${{github.event_name}}

    - name: Create Release
      id: create_release
      if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: ''
        draft: false
        prerelease: false

    - name: Upload Release Asset net462
      id: upload-release-asset-net462
      if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./artifacts/Xenial.FeatureCenter.Win.${{ steps.get_version.outputs.VERSION }}.net462.zip
        asset_name: Xenial.FeatureCenter.Win.${{ steps.get_version.outputs.VERSION }}.net462.zip
        asset_content_type: application/zip

    - name: Upload Release Asset net6.0-win64
      id: upload-release-asset-net6_0-win64
      if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./artifacts/Xenial.FeatureCenter.Win.${{ steps.get_version.outputs.VERSION }}.net6.0.x64.zip
        asset_name: Xenial.FeatureCenter.Win.${{ steps.get_version.outputs.VERSION }}.net6.0.x64.zip
        asset_content_type: application/zip

    - name: Upload Release Asset net6.0-win86
      id: upload-release-asset-net6_0-win86
      if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./artifacts/Xenial.FeatureCenter.Win.${{ steps.get_version.outputs.VERSION }}.net6.0.x86.zip
        asset_name: Xenial.FeatureCenter.Win.${{ steps.get_version.outputs.VERSION }}.net6.0.x86.zip
        asset_content_type: application/zip

  deploy-packages:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune --unshallow

      - uses: actions/download-artifact@v2
        with:
          name: nuget
          path: artifacts/nuget/

      - name: Setup .NET6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Publish to nuget.org
        run: dotnet run --project build/build.csproj deploy.nuget
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_API_KEY}}
          DEVEXPRESS_NUGET_FEED: ${{secrets.DEVEXPRESS_NUGET_FEED}}
          GITHUB_EVENT_NAME: ${{github.event_name}}
